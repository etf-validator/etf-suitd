///////////////////////////////////////////////////////////////////////////////////////
//
// etf-suitd
//
///////////////////////////////////////////////////////////////////////////////////////

buildscript {
    repositories {
        maven {
            url "http://services.interactive-instruments.de/etfdev-af/plugins-releases-local"
            credentials {
                username 'ii-bda'
                password '6ozhS683'
            }}
    }
    dependencies {
        classpath group: 'de.interactive_instruments.bda', name: 'etf-bda', version:'1.0.24'
    }
    dependencies {
        ant.unjar src: configurations.classpath.files.find {it.path.contains('etf')}, dest: 'build/gradle'
    }
}
apply from: 'build/gradle/ii-bda.gradle'

///////////////////////////////////////////////////////////////////////////////////////

group = 'de.interactive_instruments.etf.testdriver'
description = "ETF SoapUI test runner"


ext.testDataDir = project.hasProperty('etf.td.deployment.dir') ?
        project.getProperty('etf.td.deployment.dir') :
        project.file('./build/tmp/td').absolutePath

ext.suiTestTpDir = project.file('./build/tmp/testProjects')

ext.testDataStorageDir = project.hasProperty('etf.ds.dir') ?
        project.getProperty('etf.ds.dir') :
        project.file('./build/tmp/etf-ds').absolutePath

repositories {
	mavenLocal()
}

ext.aeVersion = '2.0.0'
ext.soapuiVersion = '5.2.1'

configurations {
    api
    integrationTest
    compile.exclude group: "org.apache.logging.log4j"
    runtime.exclude group: "org.apache.logging.log4j"
}

dependencies {

    // SOAPUI START

    // compile group: 'com.smartbear.soapui', name: 'soapui', version:'4.6.4'
    compile ('com.smartbear.soapui:soapui:'+soapuiVersion) {
        exclude module: 'commons-logging'
        exclude module: 'log4j'
        // exclude module: 'jtidy'
        exclude module: 'cajo'
        exclude group: 'com.jgoodies'
    }
    compile 'joda-time:joda-time:2.9.3'

    compile 'com.fifesoft:rsyntaxtextarea:2.5.3'

    // SOAPUI END


    api group: 'de.interactive_instruments', name: 'ii-commons-util', version:'2.0.0'+project.snapshotSuffix
    api group: 'de.interactive_instruments.etf', name: 'etf-core', version: '1.0.0' + project.snapshotSuffix
    api group: 'de.interactive_instruments.etf', name: 'etf-spi', version: '1.0.0' + project.snapshotSuffix
    api group: 'org.slf4j', name: 'slf4j-api', version: etf_slf4jApiVersion

    compile group: 'de.interactive_instruments.etf.suim', name: 'etf-sui-owsgtl', version:"$aeVersion"+project.snapshotSuffix
    compile group: 'de.interactive_instruments.etf.suim', name: 'etf-sui-mapper', version:"$aeVersion"+project.snapshotSuffix
    compile group: 'de.interactive_instruments.etf.suim', name: 'etf-sui-plugin', classifier:'plugin', version:"$aeVersion"+project.snapshotSuffix

    runtime files('./denied_libs/jms-1.1.jar')

    // Get libs for SoapUI: workaround for defect SoapUI POM in the SoapUI repository...
    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: etf_slf4jApiVersion
	compile group: 'commons-lang', name: 'commons-lang', version:'2.6'

    integrationTest group: 'ch.qos.logback', name: 'logback-classic', version: etf_logbackVersion
    integrationTest group: 'junit', name: 'junit', version: etf_junitTestVersion
    integrationTest group: 'de.interactive_instruments.etf.test', name: 'etf-sui-integration-test-resources', version: '1.0.1'+project.snapshotSuffix
    integrationTest group: 'de.interactive_instruments.etf', name: 'etf-stdtot', version: '1.0.0' + project.snapshotSuffix
    integrationTest group: 'de.interactive_instruments.etf.test', name: 'etf-unittest', version: '1.0.0' + project.snapshotSuffix
}

configurations {
	// jms is pulled in via several soapui dependencies but gradle denies to fetch
	// it. So just block it.
	all*.exclude group: 'javax.jms', module: 'jms'
	all*.exclude group: 'com.jgoodies', module: 'forms'

    compile.extendsFrom api
    testCompile.extendsFrom integrationTest
}

def allLibs = configurations.runtime + configurations.compile -
        configurations.compile.filter { it.name.startsWith('etf-core') } -
        configurations.compile.filter { it.name.startsWith('etf-spi') } -
        configurations.compile.filter { it.name.startsWith('ii-commons-util') } -
        configurations.compile.filter { it.name.startsWith('slf4j-api') } -
        configurations.compile.filter { it.name.startsWith('log4j') && !it.name.startsWith('log4j-over-slf4j') } -
        configurations.compile.filter { it.name.startsWith('jetty') } -
        configurations.compile.filter { it.name.startsWith('xml-apis') } -
        configurations.compile.filter { it.name.startsWith('commons-lang3') } -
        configurations.compile.filter { it.name.startsWith('xercesImpl') }

jar.doFirst {
    manifest {
        attributes(
                'Test-Engine-Title': 'SoapUI',
                'Test-Engine-Vendor': 'Smartbear',
                'Test-Engine-Version': soapuiVersion
        )
    }
}

jar {
    into('lib') {
        from allLibs
    }
}

task copyTdToTdDir(dependsOn: jar) << {
    copy {
        from jar
        into "$testDataDir"
    }
    println "Copied test driver to $testDataDir"
}

install {
    dependsOn = ["copyTdToTdDir"]
}

// INTEGRATION TESTS
///////////////////////////////////////////////////////////////////////////////////////

task extractIntegrationTestProjects << {
    copy {
        def jar = configurations.testCompile.filter { it.name.startsWith('etf-sui-integration-test-resources') }
        from jar.collect { zipTree(it) }
        into "$suiTestTpDir"
        include 'sui/**'
    }
}

// Drop classloader for integration tests
sourceSets {
    test {
        java {
            compileClasspath += main.output
            runtimeClasspath = configurations.api + test.output + configurations.integrationTest
        }
    }
}

test {
    environment "ETF_DS_DIR", testDataStorageDir
    environment "ETF_TD_DEPLOYMENT_DIR", testDataDir
    environment "ETF_TESTING_SUI_TP_DIR", suiTestTpDir.absolutePath
    dependsOn = ["compileTestJava", "extractIntegrationTestProjects", "copyTdToTdDir"]
}
///////////////////////////////////////////////////////////////////////////////////////
